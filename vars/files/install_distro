#!/bin/bash
ssh_cmd=$1; shift

if [ "$ssh_cmd" == "" ]; then
	echo "ssh_cmd must be set"
	exit 1
fi
echo "ssh_cmd: $ssh_cmd"


distro=$1; shift
if [ "$distro" == "" ]; then
	echo "distro must be set"
	exit 1
fi
echo "distro: $distro"


bits=$1; shift
if [[ "$bits" != "32" && "$bits" != "64" ]]; then
	echo "Bits can only be 32 or 64 bit"
	exit 1
fi
echo "bits: $bits"

case $distro in
	"arch")
	full_distro_name="arch-2014.09-$bits"
	;;
	"centos6")
	full_distro_name="centos6-$bits"
	;;
	"centos"|"centos7")
	full_distro_name="centos7-$bits"
	;;
	"debian")
	full_distro_name="debian-wheezy-7.0-$bits"
	;;
	"debian-rescue")
	full_distro_name="debian-wheezy-rescue-7.0-$bits"
	;;
	"fedora")
	full_distro_name="fedora20--$bits"
	;;
	"netbsd")
	full_distro_name="netbsd-6.1.5-$bits"
	;;
	"ubuntu-precise")
	full_distro_name="ubuntu-precise-12.04-$bits"
	;;
	"ubuntu"|"ubuntu-trusty")
	full_distro_name="ubuntu-trusty-14.04-$bits"
	;;
	"ubuntu-trusty-docker")
	full_distro_name="ubuntu-trusty-14.04-docker-$bits"
	;;
	*)
	echo "Unexpected distro $distro"
	exit 1
	;;
esac

echo "Using distro $full_distro_name"

expect_script="/tmp/$(basename $0).$$.expr"

cat > $expect_script <<EOM	
set timeout 5

spawn $ssh_cmd

expect "enter selection>" { sleep 2; send "4\r" }
expect "enter selection>" { sleep 2; send "2\r" }
expect " for a command-line." { send "v"; sleep 1; send \r"}
sleep 30
send "root\r"
expect "#" { send "mkfs.ext3 -L PRGMRDISK1 /dev/xvda1\r" }
expect "#" { send "mount -n /dev/xvda1 /mnt\r" }
expect "#" { send "tar xzf /distros/$full_distro_name.tar.gz -C /mnt\r" }
expect "#" { send "umount -n /mnt\r" }
expect "#" { send "shutdown -r now\r" }
expect "enter selection>" { sleep 2; send "9\r" }
EOM

/usr/bin/expect $expect_script
if [ "$?" != "0" ]; then
        echo "Expect script failed."
        rm -f $expect_script
        exit 1
fi
rm -f $expect_script; exit 0

